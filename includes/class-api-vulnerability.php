<?php
/**
 * API Class
 *
 * @package    WordPress
 * @author     David Perez <david@closemarketing.es>
 * @copyright  2022 Closemarketing
 * @version    1.0
 */

defined( 'ABSPATH' ) || exit;

/**
 * API Connector.
 *
 * API connector for Vulnerability.
 *
 * @since 1.0
 */
class API_WPVulnerability {

	/**
	 * Construct of Class
	 */
	public function __construct() {
	}

	public function get( $type, $ident ) {

    switch( $type ) {
      case 'core':
      default:
        $url = 'https://www.wpvulnerability.net/core/' . $ident . '/';
        break;
      case 'plugin':
        $url = 'https://www.wpvulnerability.net/plugin/' . $ident . '/';
        break;
      case 'theme':
        $url = 'https://www.wpvulnerability.net/theme/' . $ident . '/';
        break;
    }

    if( isset( $url ) ) {

      $response = wp_remote_get( $url );
      if ( 200 === $response['response']['code'] ) {
        $body = wp_remote_retrieve_body( $response );
        error_log( '$body' . print_r( $body, true ) );
        return json_decode( $body, true );
      } else {
        return false;
      }

    } else {
      return false;
    }

	}

	public function get_core( $version ) {

    $response = get( 'core', $version );
    $vulnerability = array();
    
    foreach( $response['data']['vulnerability'] as $v ) {
      $vulnerability[] = array( 'name' => $v['name'], 'description' => $v['description'], 'date' => $v['date'] );
    }

    return $vulnerability;

  }
  
	public function get_plugin( $slug, $version ) {

    $response = get( 'plugin', $slug );
    $vulnerability = array();
    
    foreach( $response['data']['vulnerability'] as $v ) {

      if( isset( $v['operator']['min_operator'] ) && $v['operator']['min_operator'] && isset( $v['operator']['max_operator'] ) && $v['operator']['max_operator'] ) {
        
        if( version_compare( $version, $v['operator']['min_version'], $v['operator']['min_operator'] ) && version_compare( $version, $v['operator']['max_version'], $v['operator']['max_operator'] ) ) {
          $msg = $v['operator']['min_version'] . $v['operator']['min_version'] . ' - ' . $v['operator']['max_operator'] . $v['operator']['max_version'];
          $vulnerability[] = array( 'name' => $v['name'], 'description' => $v['description'], 'date' => $v['date'], 'versions' => $msg, 'unfixed' => $v['operator']['unfixed'], 'closed' => $v['operator']['closed'] );
          unset( $msg );
        } elseif( version_compare( $version, $v['operator']['max_version'], $v['operator']['max_operator'] ) ) {
          $msg = $v['operator']['max_operator'] . $v['operator']['max_version'];
          $vulnerability[] = array( 'name' => $v['name'], 'description' => $v['description'], 'date' => $v['date'], 'versions' => $msg, 'unfixed' => $v['operator']['unfixed'], 'closed' => $v['operator']['closed'] );
          unset( $msg );
        } elseif( version_compare( $version, $v['operator']['min_version'], $v['operator']['min_operator'] ) ) {
          $msg = $v['operator']['min_version'] . $v['operator']['min_version'];
          $vulnerability[] = array( 'name' => $v['name'], 'description' => $v['description'], 'date' => $v['date'], 'versions' => $msg, 'unfixed' => $v['operator']['unfixed'], 'closed' => $v['operator']['closed'] );
          unset( $msg );
        }
      }
    }

    return $vulnerability;

  }
  
	public function get_theme( $slug, $version ) {

    $response = get( 'theme', $slug );
    $vulnerability = array();
    
    foreach( $response['data']['vulnerability'] as $v ) {

      if( isset( $v['operator']['min_operator'] ) && $v['operator']['min_operator'] && isset( $v['operator']['max_operator'] ) && $v['operator']['max_operator'] ) {
        
        if( version_compare( $version, $v['operator']['min_version'], $v['operator']['min_operator'] ) && version_compare( $version, $v['operator']['max_version'], $v['operator']['max_operator'] ) ) {
          $msg = $v['operator']['min_version'] . $v['operator']['min_version'] . ' - ' . $v['operator']['max_operator'] . $v['operator']['max_version'];
          $vulnerability[] = array( 'name' => $v['name'], 'description' => $v['description'], 'date' => $v['date'], 'versions' => $msg, 'unfixed' => $v['operator']['unfixed'], 'closed' => $v['operator']['closed'] );
          unset( $msg );
        } elseif( version_compare( $version, $v['operator']['max_version'], $v['operator']['max_operator'] ) ) {
          $msg = $v['operator']['max_operator'] . $v['operator']['max_version'];
          $vulnerability[] = array( 'name' => $v['name'], 'description' => $v['description'], 'date' => $v['date'], 'versions' => $msg, 'unfixed' => $v['operator']['unfixed'], 'closed' => $v['operator']['closed'] );
          unset( $msg );
        } elseif( version_compare( $version, $v['operator']['min_version'], $v['operator']['min_operator'] ) ) {
          $msg = $v['operator']['min_version'] . $v['operator']['min_version'];
          $vulnerability[] = array( 'name' => $v['name'], 'description' => $v['description'], 'date' => $v['date'], 'versions' => $msg, 'unfixed' => $v['operator']['unfixed'], 'closed' => $v['operator']['closed'] );
          unset( $msg );
        }
      }
    }

    return $vulnerability;

  }

}

$api_wpvulnerability = new API_WPVulnerability();
