<?php
/**
 * Primary class file for the Health Check plugin.
 *
 * @package Health Check
 */

// Make sure the file is not directly accessible.
if ( ! defined( 'ABSPATH' ) ) {
	die( 'We\'re sorry, but you can not directly access this file.' );
}

/**
 * Class CLI
 */
class CLI_WPVulnerability {

	/**
	 */
	public function __construct( $plugins_wpvulnnerability ) {
		// error_log( print_r( $plugins_wpvulnnerability->get_installed_plugins(), true ) );

		$this->plugins = $plugins_wpvulnnerability->get_installed_plugins();

		if ( class_exists( 'WP_CLI' ) ) {
			WP_CLI::add_command(
				'wpvulnerability',
				array( $this, 'scan_command' ),
				array(
					'shortdesc' => 'Prints a vulnerability',
					'synopsis'  => array(
						array(
							'type'        => 'positional',
							'name'        => 'section',
							'description' => 'Section [core|plugins|themes].',
							'optional'    => false,
							'repeating'   => false,
						),
					),
					'when'      => 'after_wp_load',
					'longdesc'  => '## EXAMPLES' . "\n\n" . 'wp wpvulnerability plugins',
				)
			);
		}
	}

	/**
	 */
	public function scan_command( $args ) {
		switch ( $args[0] ) {
			case 'core':
				$this->core_subcommand();
				break;
			case 'plugins':
				$this->plugins_subcommand();
				break;
			case 'themes':
				$this->themes_subcommand();
				break;
			default:
				WP_CLI::error( "'$args[0]' is not a registered subcommand of 'wpvulnerebality'." );
				break;
		}
	}


	/**
	 * Themes section
	 */
	public function core_subcommand() {
		error_log( 'core' );
	}

	/**
	 * Plugin section
	 */
	public function plugins_subcommand() {
		error_log( 'Plugins' );
		$result = '';
		foreach ( $this->plugins as $plugin ) {
			if ( 'true' === $plugin['vulnerable'] ) {
				$name = $plugin['Name'];
				WP_CLI::line( WP_CLI::colorize( "%r$name:%n " ) );
				$vulnerabilities = array();
				foreach ( $plugin['vulnerabilities'] as $vulnerability ) {
					$sources = '';
					foreach ( $vulnerability['source'] as $source ) {
						error_log( print_r( $source, true ) );
						$sources .= $source['link'] . "\n";
					}
					array_push(
						$vulnerabilities,
						array(
							'name'     => $vulnerability['name'],
							'versions' => $vulnerability['versions'],
							'source'   => $sources,
						)
					);
				}

				WP_CLI\Utils\format_items(
					'table',
					$vulnerabilities,
					array( 'name', 'versions', 'source' )
				);

			}
		}
	}

	/**
	 * Themes section
	 */
	public function themes_subcommand() {
		error_log( 'themes' );
	}
}
